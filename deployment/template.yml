AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: A stack that manages running the WSB Ticker Bot
Parameters:
  Version:
    Type: String
    Description: The runtime version of the WSB Ticker Bot
Resources:
  WsbTickerBot:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsbTickerBot
      Handler: lambda_function_process_submissions.run_process_submissions
      Runtime: python3.8
      CodeUri: ../src/.
      Description: Run the WSB Ticker Bot
      Environment:
        Variables:
          BotUserName: WSBStockTickerBot
          NotificationsStreamName: !Ref NotificationsStream
      Timeout: 60
      MemorySize: 256
      ReservedConcurrentExecutions: 1
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFullAccess
      Layers:
        - !Ref libs
      Events:
        ScheduleProcessSubmissions:
          Type: Schedule
          Properties:
            Schedule: 'cron(0/10 * * * ? *)'
            Name: ProcessSubmissionsEveryTenMinutes
            Input: !Sub "{\"version\": \"${Version}\"}"
            Description: Process submissions every 10 minutes
      Tags:
        Version: !Ref Version

  WsbTickerBotProcessInbox:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsbTickerBotProcessInbox
      Handler: lambda_function_process_inbox.run_process_inbox
      Runtime: python3.8
      CodeUri: ../src/.
      Description: Process the bot's inbox
      Environment:
        Variables:
          BotUserName: WSBStockTickerBot
          NotificationsStreamName: !Ref NotificationsStream
      Timeout: 60
      MemorySize: 128
      ReservedConcurrentExecutions: 1
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AmazonDynamoDBFullAccess
      Layers:
        - !Ref libs
      Events:
        ScheduleProcessInbox:
          Type: Schedule
          Properties:
            Schedule: 'cron(0/5 * * * ? *)'
            Name: ProcessBotInboxEveryFiveMinutes
            Input: !Sub "{\"version\": \"${Version}\"}"
            Description: Process bot inbox every 5 minutes
      Tags:
        Version: !Ref Version

  WsbTickerBotHandlerProcessInbox:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsbTickerBotHandlerProcessInbox
      Handler: lambda_function_process_inbox.run_process_inbox
      Runtime: python3.8
      CodeUri: ../src/.
      Description: Process the handler's inbox
      Environment:
        Variables:
          BotUserName: WSBTickerBotHandler
          NotificationsStreamName: !Ref NotificationsStream
      Timeout: 60
      MemorySize: 128
      ReservedConcurrentExecutions: 1
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AmazonDynamoDBFullAccess
      Layers:
        - !Ref libs
      Events:
        ScheduleProcessInbox:
          Type: Schedule
          Properties:
            Schedule: 'cron(0/5 * * * ? *)'
            Name: ProcessHandlerInboxEveryFiveMinutes
            Input: !Sub "{\"version\": \"${Version}\"}"
            Description: Process handler inbox every 5 minutes
      Tags:
        Version: !Ref Version

  WsbTickerBotNotifier0:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsbTickerBotNotifier0
      Handler: lambda_function_notify.run_notify
      Runtime: python3.8
      CodeUri: ../src/.
      Description: Run the WSB Ticker Bot
      Environment:
        Variables:
          BotUserName: WSBStockTickerBot
          NotificationsStreamName: !Ref NotificationsStream
      Timeout: 120
      MemorySize: 256
      ReservedConcurrentExecutions: 1
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFullAccess
      Layers:
        - !Ref libs
      Events:
        UserNotification:
          Type: Kinesis
          Properties:
            Stream: !GetAtt NotificationsConsumer.ConsumerARN
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
            StartingPosition: LATEST
      Tags:
        Version: !Ref Version

  WsbTickerBotNotifier1:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: WsbTickerBotNotifier1
      Handler: lambda_function_notify.run_notify
      Runtime: python3.8
      CodeUri: ../src/.
      Description: Run the WSB Ticker Bot
      Environment:
        Variables:
          BotUserName: WSBTickerBotHandler
          NotificationsStreamName: !Ref NotificationsStream
      Timeout: 120
      MemorySize: 256
      ReservedConcurrentExecutions: 1
      # Function's execution role
      Policies:
        - AWSLambdaBasicExecutionRole
        - AWSLambdaReadOnlyAccess
        - AmazonDynamoDBFullAccess
        - AmazonKinesisFullAccess
      Layers:
        - !Ref libs
      Events:
        UserNotification:
          Type: Kinesis
          Properties:
            Stream: !GetAtt NotificationsConsumer.ConsumerARN
            BatchSize: 10
            MaximumBatchingWindowInSeconds: 5
            StartingPosition: LATEST
      Tags:
        Version: !Ref Version

  NotificationsConsumer:
    Type: AWS::Kinesis::StreamConsumer
      Properties:
        ConsumerName: NotificationsConsumer
        StreamARN: !GetAtt NotificationsStream.Arn

  NotificationsStream:
    Type: AWS::Kinesis::Stream
    Properties:
      Name: wsb-ticker-bot-notifications
      ShardCount: 1

  libs:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: wsb-ticker-bot-lib
      Description: Dependencies for the WSB Ticker Bot app
      ContentUri: package/.
      CompatibleRuntimes:
        - python3.8